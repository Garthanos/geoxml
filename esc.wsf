<package>
<!-- Generated by Soya.BeanManager.WSFPackager v0.91 [Thu, 14 Jun 2001 23:03:37 UTC] -->
<job>
<?job error="false" debug="false" ?>
<resource id="about">
-----------------------------------------------------------------------------
  ESC (ECMAScript Cruncher)
  * Version       : 1.01
  * Date          : 2001-06-15 01:03:37 [+0200]
  * License       : GNU GPL  (http://www.gnu.org/copyleft/gpl.txt)
  ---------------------------------------------------------------------------
  ESC is an ECMAScript pre-processor enabling an unlimited number of external
  scripts to be compressed/crunched into tight, bandwidth-optimized packages.
  ESC supports compressing of external sources only. Trying to process
  scripts inlined in HTML, ASP, PHP or equivalent pages are NOT recommended
  with this version of ESC. This feature might be added in a later version.

  ESC is built using components from the Soya Scripting API 1.0.0b1,
  a uni-host/cross-browser ECMAScript compliant class-library distributed
  freely under the terms of the GNU Lesser General Public License. (LGPL)
  The Soya Scripting API 'lib-soya' and Soya SCK (Script Construction Kit)
  can be found at http://www.saltstorm.net
  ---------------------------------------------------------------------------
  * ECMAScript is the international standard for javascript.
  ---------------------------------------------------------------------------
  Copyright (C) 2001, Thomas Loo - Saltstorm. &lt;esc@saltstorm.net&gt;
-----------------------------------------------------------------------------
</resource>

<resource id="copyright">
-----------------------------------------------------------------------------

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

-----------------------------------------------------------------------------

</resource>

<resource id="usage">
-----------------------------------------------------------------------------
 Usage : cscript ESC.wsf -l [0-4] -ow output.js foo.js bar.js C:\baz ...
 ----------------------------------------------------------------------------
  -a  [-about]             : Description page
  -c  [-copyright]         : Copyright/license notice
  -e  [-example]           : Examples of usage
  -h  [-help]              : This help-screen
 ----------------------------------------------------------------------------
  -l  [-level]   [01(2)34] : (optional) Set crunch-level (4 sets -$ on)
  -s  [-silent]            : (optional) Run silent, nada stdout
  -v  [-verbose]           : (optional) Run in verbose mode
  -$                       : (optional) Activate variable-substitution engine
 ----------------------------------------------------------------------------
  -oa &lt;filename&gt; : Filename for appending
  -ow &lt;filename&gt; : Filename for writing
  -ow STDOUT     : Write stream to STDOUT
 ----------------------------------------------------------------------------
 Input directive(s)  (required)
  script-file(s) or/and directories containing scripts to crunch...
</resource>

<resource id="example">
-----------------------------------------------------------------------------
 Examples of usage.

  Crunch 'original1.js','original2.js' and 'original3.js' at
  level 2 (default) and save the output as 'crunched.js'.
  Any previous file named 'crunched.js' will be overwritten.
   X:\cscript ESC.wsf -ow crunched.js original1.js original2.js original3.js
  ---------------------------------------------------------------------------

  Grab all scriptfiles (.js) in directory 'C:\script-directory' and crunch
  them at level 1 (comment and empty line removal only) and append the result
  to 'crunched.js'. If 'crunched.js' doesn't exist, it will be created.
   X:\cscript ESC.wsf -l 1 -oa crunched.js C:\script-directory
  ---------------------------------------------------------------------------

  Subject 'original1.js' and 'original2.js' for variable substitution,
  but perform no comment or whitespace removal.
  Redirect output to STDOUT instead of writing to file.
   X:\cscript ESC.wsf -l 0 -$ -ow STDOUT original1.js original2.js
  ---------------------------------------------------------------------------

  Crunch 'original.js' using variable substitution and remove
  any occurance of whitespace (where permitted...)
  and save it as 'crunched.js' (equals -l 3 -$)
   X:\cscript ESC.wsf -l 4 -ow crunched.js original.js
  ---------------------------------------------------------------------------

 Try 'ESC.wsf -help' for information about available run-time directives.
-----------------------------------------------------------------------------
</resource>

<resource id="wscript">
ESC must be run from a DOS command prompt under	
cscript.exe. Do you want to switch host and have
ESC show the initial help-screen ?

</resource>

<resource id="jscript">
ESC needs JScript 5.5 or higher to score...
You need to update your version of JScript to run ESC.
Read the 'Requirements' section in the manual for information
how to obtain and install the latest version of Microsofts
'Windows Script' package.

</resource>

<resource id="common.map">
; Host dependant TOP-level objects/methods/properties for 
; Opera,  NN4+, Mozilla and MSIE4+
; -------------------------------------------------------------------------
; Following words are exposed at the topmost-level in most
; common browsers and must not be targets for substitution.
; -------------------------------------------------------------------------
; The content of this file is used as a map for supporting ESC's
; variable substitution engine. Since ESC isn't ECMA or DOM-aware, everything in
; your src-files in for processing that looks like a word
; (containing only A-Z, 0-9, `$´ and `_´ ([$\w]{3,}) and appears scripted
; as having top-level DOM priority or statement/keyword status must be looked
; up against this list to determine whether it can be substituted with a new
; name or not.

; If the processed word is found herein it'll be blessed and thereby not
; substituted by the ESC subst engine. 
; If not found, it will be given and replaced with an unique shorthanded
; substitution name. These names are stored globally and any identical word
; coming up ahead will be substituted with the very same name it previously
; was assigned.

; Objects/Constructors/Intrinsics --

Anchor
ActiveXObject
Call
Closure
Components
Dictionary
Document
Enumerator
Event
Form
Global
HTMLElement
Image
Layer
Option
Url
Popup
VBArray
WScript

; Document Object Model Level 1 Core / ECMA Bindings -----
; http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html
; Document Object Model (Core) Level 1 interfaces ---------
; http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html
Attr
CDATASection
CharacterData
Comment
DOMException
DOMImplementation
DocumentType
Element
EntityReference
NamedNodeMap
Node
NodeList
Notation
ProcessingInstruction
Text
; ---------------------------------------------------------

; Document Object Model (HTML) Level 1 interface ----------
; http://www.w3.org/TR/REC-DOM-Level-1/level-one-html.html
HTMLElement
HTMLDocument
HTMLCollection
HTMLHtmlElement
HTMLHeadElement
HTMLLinkElement
HTMLTitleElement
HTMLMetaElement
HTMLBaseElement
HTMLIsIndexElement
HTMLStyleElement
HTMLBodyElement
HTMLFormElement
HTMLSelectElement
HTMLOptGroupElement
HTMLOptionElement
HTMLInputElement
HTMLTextAreaElement
HTMLButtonElement
HTMLLabelElement
HTMLFieldSetElement
HTMLLegendElement
HTMLUListElement
HTMLOListElement 
HTMLDListElement
HTMLDirectoryElement
HTMLMenuElement
HTMLLIElement
HTMLBlockquoteElement 
HTMLDivElement
HTMLParagraphElement
HTMLHeadingElement
HTMLQuoteElement
HTMLPreElement
HTMLBRElement
HTMLBaseFontElement 
HTMLFontElement
HTMLHRElement
HTMLModElement 
HTMLAnchorElement
HTMLImageElement
HTMLObjectElement
HTMLParamElement
HTMLAppletElement
HTMLMapElement
HTMLAreaElement
HTMLScriptElement
HTMLTableElement
HTMLTableCaptionElement
HTMLTableColElement
HTMLTableSectionElement
HTMLTableRowElement
HTMLTableCellElement
HTMLFrameSetElement
HTMLFrameElement
HTMLIFrameElement
; ----------------------------------------------


; Methods (all supported hosts) ----------------
_newEnum
alert
atob
attachEvent
btoa
clearTimeout
clearInterval
CollectGarbage
confirm
createPopup
detachEvent
escape
eval
execScript
find
frameElement
getComputedStyle
getResource
GetObject
isNaN
moveBy
moveTo
open
openDialog
parseInt
parseFloat
print
prompt
resizeBy
resizeTo
ScriptEngine
ScriptEngineMajorVersion
ScriptEngineMinorVersion
ScriptEngineBuildVersion    
scroll
scrollBy
scrollIntoView
scrollTo
setInterval
setTimeout
showHelp
showModalDialog
showModelessDialog
taint
unescape
untaint
; ---------------


; Properties ---
_content
appCore
arguments
arity
callee
caller
clientInformation
clipboardData
closed
constructor
controllers
crypto
defaultStatus
directories
document
event
external
history
frames
innerHeight
innerWidth
java
length
loading
location
locationbar
name
menubar
navigator
netscape
offscreenBuffering
opener
opera
outerHeight
outerWidth
pageXOffset
pageYOffset
parent
personalbar
pkcs11
prompter
prototype
screen
screenLeft
screenTop
screenX
screenY
scrollX
scrollY
scrollbars
self
sidebar
status
statusbar
style
sun
title
toolbar
top
window
; -------------


; Events (object [window]) ------
onafterprint
onbeforeprint
onbeforeunload
onblur
onerror
onfocus
onhelp
onload
onresize
onscroll
onunload
onmousedown
onmouseup
onclick
onmouseover
onmouseout
onkeydown
onkeyup
onkeypress
onmousemove
onsubmit
onreset
onchange
onselect
onclose
onabort
onerror
onpaint
ondragdrop
; --------------


; -- Soya ------
Soya

; -- DynAPI ----
Clone
ColorPicker
CoreSkinButton
CoreSkinWindow
CoreSkinwindowaddChild
Count
DragDrop
DragEvent
DynAPI
DynAPIObject 
DynDocument
DynEvent
DynImage
DynKeyEvent
DynLayer
DynMouseEvent
DynObject
EventListener
EventMethod
EventMethodS
FileCabinet
FileIO
HoverAnimation
IbsParallax
ImageAnimation
imageCollapse
ImgButton
Label
Layout
List
ListItem
Litelist
LoadPanel
LoadQueue
MyMouseEvent
OpacityAnimation
Panel
Pathanim
PathAnimation
PopUp
ProgressBar
PullDownParams
PushPanel
RadioDial
RiFastSkinTreenode
ScrollBar
ScrollPane
SineWave
Slider
Sprite
Thread
; ---------------------------------------

</resource>

<resource id="core.map">
; ECMA-262 language statements and keywords (+ some extra WSH/JScript.NET stuff) ...
;-----------------------------------------------------
abstract
break
continue
const
class
catch
case
debugger
default
double
delete
do
extends
else
function
finally
float
false
for
get
instanceof
implements
import
int
in
if
long
null
new
protected
private
package
public
return
switch
static
super
set
typeof
throw
true
this
try
void
var
while
with
;---------------------------------------------------------

; JavaScript 1.5/Mozilla stuff ---------------------------
getter
setter
__defineGetter__
__defineSetter__
; --------------------------------------------------------

; JScript 3+ conditional compilation stuff -----------
end
elif 
cc_on 
_win32
_win16
_mac
_alpha
_x86
_mc680x0
_PowerPC
_jscript
_jscript_build
_jscript_version
; ---------------------------------------------------------


; JScript 1+ / JS 0.9+ Intrinsic Objects ------------------
Array
Boolean
Date
Error
Function
Math
Number
Object
RegExp
String
;---------------------------------------------------------

; Future reserved (disabled) -----------------------------
;boolean
;byte
;char
;enum
;export
;final
;goto
;interface
;native
;short
;synchronized
;throws
;transient
;volatile
;---------------------------------------------------------

</resource>

<script language="JScript">
//<![CDATA[
/***
* Pod {ESCtool} (1.0.0b1; crlvl: 1/1; Thu, 14 Jun 2001 23:03:39 UTC)
* Copyright(c) 2001, Thomas Loo - Saltstorm. http://www.saltstorm.net - soya@saltstorm.net
**/
/*
To prove that ESC actually can handle name-mangling and as a general self-sanity check,
 ESC has been used to compress itself along with other Soya-beans during bundling
 of this tool. If you want to examine these beans in a more human readable state
 you need to get the latest distribution of the Soya API.
*/
/* <POD>  */
function Soya_API($1f)
	{
	this.name		= 'Soya';
	this.version	= '1.0.0b1';
	this.type		= 'static';
	this.debug		= 0;
	this.scriptHost	= $1f;
	this.libPath	= '/lib-soya/';
	this.podPath	= '$pods';
	this.resourcePath = '$resources';
	this.altDowngrade = $00;
	this.attachBean	= $01;
	this.declareBean	= $02;
	this.registerBean = $03;
	this.BeanPrototype= Soya_BeanPrototype;
	this.beans		= new Object();
	this.beans.all	= new Array();
	Soya_Loader.prototype = new this.BeanPrototype();
	this.Loader		= new Soya_Loader(this);
	}
function Soya_BeanPrototype(){
	}
function Soya_VirtualBean($20){
	this.name = $20;
	this.type = Soya.type;
	}
function $00($21){
	if($21 && !this.Loader.fso && !this.Loader.gzip && !navigator.platform)
	  (document.images) ? self.location.replace($21) : self.location.href = $21;
	}
function $01($22){
	if(!$22.virtual)
	  eval($22.mutex).prototype = new this.BeanPrototype();
	eval($22.name + '=' + (!$22.constructable?'new ':' ') +
	 $22.mutex + (!$22.constructable?('("'+ $22.name + '")'):''));
	$22.complete = true;
	if(this.Loader.callbacks[$22.name])
	  this.Loader.callbacks[$22.name](eval($22.name));
	}
function $02($20, $23, $24, $25, $26){
	var $27 = new Object();
	$27.complete = Boolean($26);
	$27.constructable = !$25;
	$27.mutex = $23 || 'Soya_VirtualBean';
	$27.name = $20;
	$27.parentName = $24;
	$27.virtual = !$23;
	return(this.beans[$20] = this.beans.all[this.beans.all.length] = $27);
	}
function $03($20, $25, $28, i){
	if(!this.beans[$20]){
	  var $29 = '';
	  var $2a = $20.split('\x2e');
	  var $23 = $2a.join('\x5f');
	  if($28){
	    var $2b = '';
	    $29 = $2a[0];
	    for(i = 1; i<$2a.length - 1; i++){
		$2b += $29;
	      $29 += String('\x2e' + $2a[i]);
	      if(i <= $28 && !this.beans[$29])
	 	  this.attachBean(this.declareBean($29, null, $2b, true, true));
	      }
	    }
	  $2a.length -= $28 ? $28 : 1;
	  $29 = $2a.join('\x2e');
	  this.declareBean($20, $23, $29, $25);
	  if($2a.length > 1 && !this.beans[$29])
 	    this.Loader.pendings[this.Loader.pendings.length] = this.beans[$20];
	  else {
	    this.attachBean(this.beans[$20]);
	    var $2c = new Array();
	    for(i = 0; i < this.Loader.pendings.length; i++)
	      if(this.Loader.pendings[i].parentName == $20)
		  this.attachBean(this.Loader.pendings[i]);
	      else $2c[$2c.length] = this.Loader.pendings[i];
	    this.Loader.pendings = $2c;
	    }
	  }
	return Boolean(i)
	}
function Soya_BeanPrototype_prototype($2d){
	this.getResourcePath = Function('sName',
	  "return(Soya.libPath + Soya.resourcePath + '/' + (sName||this.name).split('.').join('/') + '/')");
	this.getClass = Function('sName' , 'return eval(Soya.beans[sName || this.name].mutex)');
	this.getMaster = Function("return Soya.beans[this.name]");
	this.toString = Function("return('[object ' + (this.name || 'unknown') + ']')");
	if($2d > 1)
	  this.initialize = $04;
	if($2d != 1)
	  this.getBeanPath = Function('sName',
	   "return(Soya.libPath + (sName||this.name).split('.').join('/'))");
	}
function $04($2e){
	if(!Soya.beans[this.name].initialized){
	  $2e = $2e ||
	   Soya.scriptHost[Soya.beans[this.name].mutex + '_initialize'];
	  if(typeof($2e) == 'function')
	    Soya.beans[this.name].initialized = !$2e(this);
	  }
	}
function Soya_Loader($2f){
	this.name = 'Soya.Loader';
	this.type = 'static';
	var $30 = Boolean($2f.scriptHost.document);
	this.zipExt = '.zip';
	this.gzipExt = '.jsgz';
	this.autoSelect = true;
	this.pendings = new Array();
	this.callbacks = new Object();
	this.fso = $30 ? null : new ActiveXObject('Scripting.FilesystemObject');
	this.$77 = (typeof RegExp != 'undefined') ? new RegExp('^(\\w+:|\.+)?\\/+.*') : null;
	this.zip = $30 ? (typeof(self.loading) == 'boolean' && navigator.javaEnabled()) : 0;
	this.gzip = $30 ? ((document.all && navigator.platform == 'Win32') || self.opera || document.getElementById) : 0;
	this.getPodExtension = $05;
	this.$78 = $30 ? $0b : $0c;
	this.$79 = $0a;
	this.loadBean =
	this.loadScript = $06;
	this.loadPod = $08;
	this.loadPodByName = $09;
	this.loadBeanByName = $07;
	$2f.declareBean(this.name, 'Soya_Loader', $2f.name, true, true);
	}
function $05(){
	return((this.autoSelect && (this.zip||this.gzip))?
	 (this.gzip ? this.gzipExt : this.zipExt) : '.js')
	}
function $06($31){
	var $32 = (this.$77 && this.$77.test($31)) ? '' : Soya.libPath;
	return this.$78($32 + $31);
	}
function $07($20){
	return(!Soya.beans[$20]) ? this.loadBean(Soya.getBeanPath($20) + '.js', 1) : ''
	}
function $08($33, $34){
	return this.$78(
	 (this.$77 && this.$77.test($31)) ? '' : (Soya.libPath + Soya.podPath + '/')) +
	  ($33 + ($34 || this.getPodExtension()), 1);
	}
function $09($33){
	return this.loadPod(
	  $33.split('.').join('/') + '/' + $33.substring($33.lastIndexOf('.') + 1))
	}
function $0a($35){
	if(!this.debug)document.writeln($35);
	else alert($35); return $35
	}
function $0b($31, $36, $37){
	if(this.zip && $36 && this.autoSelect)
	  $37='ARCHIVE="'+$31+'" SRC="'+
	   $31.substring($31.lastIndexOf('/') + 1, $31.lastIndexOf('.')) + '.js';
	else $37 = 'SRC="' + $31;
	return this.$79('\x3cSCR' + 'IPT LANGUAGE="JavaScript1.2" ' +
	 (document.getElementById ? 'DEFER ' : '')+
	 $37 + '" TYPE="text\/javascript"\x3e\x3c\x2fSCR' + 'IPT\x3e');
	}
function $0c($32){
	if(this.fso.FileExists($32)){
	  var $38 = this.fso.OpenTextFile($32),
	   $39 = $38.ReadAll();
	  $38.Close();
	  return $39;
	  }
	else WScript.Echo(this.name + ' ' + Soya.version + '> File Not found: ' + $32);
	WScript.Quit(99);
	}
	Soya_BeanPrototype.prototype = new Soya_BeanPrototype_prototype(2);
	Soya_VirtualBean.prototype = new Soya_BeanPrototype_prototype(1);
	Soya_API.prototype = new Soya_BeanPrototype_prototype(0);
	var Soya = new Soya_API(this);
	if(typeof($3a) == 'function') $3a(Soya);

function Soya_WSH_Arguments(){
	this.name		= 'Soya.WSH.Arguments';
	this.type		= 'static';
	this.version	= '0.89';
	this.dependencies	= [];
	this.arguments	= {length : 0};
	this.getArguments = $0d;
	this.getArgument = function ($3b) { return (this.arguments[$3b] || "") }
	this.$7a = $0e;
	}
function $0d(){
	if(!this.arguments.length && WScript.Arguments.length){
	  var i, arg, $3c = [], $3d = new RegExp('^-+');
	  for(i = 0; i < WScript.Arguments.length; i++)
	    $3c[$3c.length] = WScript.Arguments.item(i);
	  for(i = 0; i < $3c.length; i++){
	    arg = $3c[i].replace($3d, '-');
	    if(arg.length > 1 && $3d.test(arg)){
	      if(typeof $3c[i + 1] != 'undefined' && !$3d.test($3c[i + 1]))
		  (this.arguments[this.$7a(arg.replace($3d, ''))] =
		   this.$7a($3c[i + 1])), i++;
	      else this.arguments[this.$7a(arg.replace($3d, ''))] = 1;
	      }
	    else if(arg.length)
		this.arguments[this.arguments.length++] = this.$7a($3c[i])
	    }
	  }
	return this.arguments;
	}
function $0e($3e){
	return $3e.length < 2 ? $3e : $3e.replace(/^\\-/, '-').
	replace(/\\{2}/g, '\\');
	}
	if(typeof(Soya) == 'object') Soya.registerBean('Soya.WSH.Arguments', true, 1);
function Soya_Saltstorm_ESC($3f, $40, $41, $42){
	this.name = 'Soya.Saltstorm.ESC';
	this.version = '1.01';
	this.type = 'constructor';
	this.dependencies = [];
	this.label = 'ESC (ECMAScript Cruncher) ' + this.version +
			 '\r\nCopyright (C) 2001, Thomas Loo - Saltstorm <esc@saltstorm.net>';
	this.fso		= Soya.Loader.fso;
	this.resourcePath = $41 || this.fso.GetParentFolderName(WScript.ScriptFullName);
	this.crunchLevel  = $3f || 2;
	this.$7b = 0;
	this.$7c	= '\x02';
	this.substitute = false;
	this.verbose = $40;
	this.silent = $42;
	this.initialize();
	this.flush();
	}
function Soya_Saltstorm_ESC_initialize($43){
	$44 = $43;
	var $45 = "(?:\"{2}|'{2}|\".*?(?!\\\\).\"|'.*?(?!\\\\).'|\\/.'|\\/[^*\\/].+\\/)";
	var $46 = "[-!%&;<=>~:\\^\\+\\|\\,\\(\\)\\*\\?\\[\\]\\{\\}]+";
	var $47 = "(?:\\/\\*(?!@).(?:.|\\n)*?\\*\\/|\\/\\/.*)";
	var $48 = "(?:(?!\"|').*?\\/\\/.*?(?!\"|').)\\n";
	var $49 = "(\\}(?!\\}|\\n))([^;,e\\]\\)])\\n?";
	with($43.getClass()){
        prototype.fileFilter		= new RegExp('.+\\\\(?!$|_)\\w*\\.js$', 'i');
	  prototype.fso			= Soya.Loader.fso;
	  prototype.core			= {};
	  prototype.bless 		= {};
	  prototype.mangle	 	= {};
	  prototype.common		= {};
	  prototype.substitionmap	= {};
	  prototype.crunch	= $1d;
	  prototype.flush		= function () { this.buffer = ''; this.report = { $4a : [] }; };
	  prototype.getSubstitute	= $13;
	  prototype.loadMaps	= $10;
	  prototype.out		= $0f;
	  prototype.load		= $11;
	  prototype.save		= $12;
	  prototype.printReport	= $1e;
	  prototype.oReMarkedPrefix = new RegExp("[$_]");
	  prototype.oReNonAlpha = new RegExp("[^$\\w]", "g");
	  prototype.oReIsSubstPass = new RegExp("^[\\x00\\.\"']");
	  prototype.oReTrimRight = new RegExp("\\s+$");
	  prototype.oReMapComment = new RegExp("^\\s*\\W");
	  prototype.oReNotNextToStatement = new RegExp("^[-\\\\+\"~'!]");
	  prototype.oReScriptComments_0 = new RegExp("(" + $45 + ")|(" + $47 + ")", "gm");
	  prototype.oReTrailingComments_01 = new RegExp("(" + $45 + ")|(\\n\\s*\\/{2}.+)|(" + $48 + ")", "gm");
	  prototype.oReWhiteSpaceEqv_1 = new RegExp("("+ $45 + ")|(\\r?\\n\\s+)|(\\x20{2,})", "g");
	  prototype.oReOperatorRightW_2 = new RegExp("("+ $45 + ")|(\\w+)?[ \\t]+(" + $46 + ")", "g");
	  prototype.oReOperatorLeftW_3 = new RegExp("("+ $45 + ")|(" + $46 + ")[ \\t]+", "g");
	  prototype.oReBlessFunctions_4 = new RegExp("("+ $45 + ")|function[\\n\\s]+([$\\w]+)", "g");
	  prototype.oReSubstVariables_5 = new RegExp("(" + $45 + ")|(" + $47 + ")|(\\W[\\n\\s]*?[$\\w]+)\\b", "gm");
	  prototype.oReSubstMarkedProperty_6 = new RegExp("(" + $45 + ")|(\\x00)|\\.[\\n\\s]*?([$_][$\\w]{3,})", "g");
	  prototype.oReCompoundHack_7 = new RegExp("(" + $45 + ")|" + $49 , "gm");
	  }
	$43.loadMaps('core.map', 'common.map', 'bless.map', 'mangle.map');
	}
function $0f($4b, $4c){
	if(!this.silent){
	  var $4d = String((!$4c ? 'ESC> ' : '') + ($4b || ''));
	  WScript.Echo($4d);
	  }
	}
function $10(){
	var $4e, $4f, $50, $51, $52;
	for(var i = 0; i<arguments.length; i++){
	  $4e = arguments[i].replace(/\W.+$/, '');
	  try {
	    $50 = getResource(arguments[i]).split(/\r?\n/g) || [];
	      for(var j = 0; j < $50.length; j++)
	        if($50[j].length && !$44.oReMapComment.test($50[j]))
		    Soya_Saltstorm_ESC.prototype[$4e][$50[j].replace($44.oReTrimRight, '')] = 1;
	    if(this.verbose)
	      this.out('Parsed map "' + $4e + '", ' + $50.length + ' entries.')
	    }
	  catch ($53){
	    if($53)
		$50 = null;
	    }
	  if($50)
	    continue;
	  else $4f = String(this.resourcePath + '\\' + arguments[i]);
	  if(/^common|core/.test(arguments[i]) && !this.fso.FileExists($4f)){
	    this.out('Couldn\'t load map : ' +
	     this.fso.GetAbsolutePathName($4f));
	    return WScript.Quit(99);
	    }
	  else if(typeof this[$4e] != 'object'){
	    this.out('Unrecognized mapname : ' +  $4e);
	    return WScript.Quit(99);
	    }
	  else if(this.fso.FileExists($4f)){
	    $50 = this.fso.OpenTextFile($4f);
	    $52 = 0;
	    while(!$50.AtEndOfStream){
	      $51 = $50.ReadLine();
	      if($51.length && !$44.oReMapComment.test($51))
		  Soya_Saltstorm_ESC.prototype[$4e][$51.replace($44.oReTrimRight, '')] = ++$52;
	      }
	    $50.Close();
	    Soya_Saltstorm_ESC.prototype[$4e].length = $52;
	    if(this.verbose)
	      this.out('Loaded map "' + $4e + '", ' + $52 + ' entries. [' + $4f + ']');
	    }
	  }
	}
function $11(){
	var i, $54, $55, $56, $57 = [];
	for(i = 0; i < arguments.length; i++){
	 if(arguments[i] && this.fso.FolderExists(arguments[i])){
	   $56 = new Enumerator(this.fso.GetFolder(arguments[i]).SubFolders);
	   for(; !$56.atEnd(); $56.moveNext())
	     arguments[arguments.length++] = $56.item().Path;
	   $56 = new Enumerator(this.fso.GetFolder(arguments[i]).Files);
   	   for(; !$56.atEnd(); $56.moveNext())
	     if($56.item().Size > 0 && this.fileFilter.test($56.item().Path))
	       $57.push($56.item().Path);
	    }
	 else if(arguments[i])
	   $57.push(arguments[i]);
	  }
	for(i = 0; i < $57.length; i++){
	  if(!this.fso.FileExists($57[i])){
	    this.out('Couldn\'t load script : ' + this.fso.GetAbsolutePathName($57[i]));
	    return WScript.Quit(99);
	    }
	  else if(this.verbose)
	    this.out('Loading script "' + this.fso.GetAbsolutePathName($57[i]) + '"');
	  $55 = this.fso.GetFile($57[i]);
	  $58 = $55.OpenAsTextStream(1, 0);
	  this.buffer += (this.report.$4a.length ? this.$7c : '') + $58.ReadAll();
	  $58.Close();
	  this.report.$4a.push(
	   this.fso.GetAbsolutePathName($57[i]) +
	   ' (' + ($55.Size / 1024).toFixed(2) + ' kB)');
	  }
	return Boolean($57.length);
	}
function $12($59, $5a){
	var $58;
	if(!$59){
	  this.out('Need an output filename!');
	  return WScript.Quit(99);
	  }
	else if(this.fso.FolderExists($59)){
	  this.out('Need an output filename, "' +
	   this.fso.GetAbsolutePathName($59) + '" is a folder.');
	  return WScript.Quit(99);
	  }
	this.outFile = this.fso.GetAbsolutePathName($59);
	this.outMode = $5a ? 'Writing' : 'Appending';
	$58 = this.fso.OpenTextFile(this.outFile, ($5a ? 2 : 8), true);
	$58.WriteLine(this.buffer);
	$58.Close();
	}
function $13($5b){
	if(!this.substitionmap[$5b]){
	  var $5c = (this.$7b++).toString(16);
	  this.substitionmap[$5b] = String('$' + ($5c.length > 1 ? $5c : ('0' + $5c)));
	  if(this.verbose)
	    this.out('Substituting [' + this.substitionmap[$5b] + '] -> [' + $5b + ']');
	  }
	return this.substitionmap[$5b];
	}
function $14($5d, $5e, $5f){
	if(typeof $5f != 'undefined')
  	  return '';
	else return $5d;
	}
function $15($5d, $60, $61, $62){
	if(typeof $61 != 'undefined')
	  return '';
	else if(typeof $62 != 'undefined')
	  return $62.replace(/\/\/.*?$/, '');
	else return $5d;
	}
function $16($5d, $60, $63){
	if(typeof $60 != 'undefined')
	  return $5d;
	else if($63 && $63.length > 3 &&
	 ($44.mangle[$63] || $44.oReMarkedPrefix.test($63.charAt(0))))
	  $63 = $44.getSubstitute($63);
	else Soya_Saltstorm_ESC.prototype.bless[$63] = 1;
	return String('function \x00' + $63);
	}
function $17($5d, $60, $64, $65){
	if(typeof $60 == 'undefined' && typeof $64 == 'undefined' && typeof $65 == 'string'){
        $65 = $65.replace(/\s+/g, '');
	  if(!$44.oReIsSubstPass.test($65) && isNaN(parseInt($65.substr(1), 10))){
	    $65 = $65.replace($44.oReNonAlpha, '');
	    if($65.length > 3 && !$44.core[$65] && !$44.common[$65] &&
	     !$44.bless[$65] && ($44.mangle[$65] || !$44.mangle.length))
	      return $5d.replace($65, $44.getSubstitute($65));
	    }
	  }
	return $5d;
	}
function $18($5d, $60, $66, $67){
	if(typeof $67 == 'string')
	 return(!$44.core[$67] && !$44.common[$67] && !$44.bless[$67]) ?
	   String('.' + $44.getSubstitute($67)) : $5d;
	else if(typeof $60 != 'undefined')
	  return $5d;
	else return '';
	}
function $19($5d, $60, $68, $69, $6a){
	if(typeof $60 != 'undefined')
	  return $5d;
	else if(typeof $68 != 'undefined')
	  return '\r\n';
	else if(typeof $69 != 'undefined')
	  return ' ';
	else return '';
	}
function $1a($5d, $60, $6b, $6c){
	if(typeof $60 == 'undefined'){
	  if(!$44.oReNotNextToStatement.test($6c) || !$6b || !$44.core[$6b])
	    return ($6b || '') + $6c;
	  else return $5d;
	  }
	else return $60;
	}
function $1b($5d, $60, $6c){
	if(typeof $60 != 'undefined')
	  return $5d;
	else return $6c;
	}
function $1c($5d, $60, $6d, $6e){
	if(typeof $60 != 'undefined')
	  return $5d;
	else return ($6d + ';' + $6e);
	}
function $1d($6f, $3f){
	if(typeof $6f == 'string')
	  this.buffer = $6f;
	if(!this.buffer.length)
	  return String();
	if(typeof $3f == 'number')
	  this.crunchLevel = $3f;
	this.report.startAt = (new Date()).getTime();
	var $70 = this.report.originalLength = this.buffer.length;
	if(this.crunchLevel >= 1){
	  this.buffer = this.buffer.replace(this.oReScriptComments_0, $14)
	   .replace(this.oReTrailingComments_01, $15)
	   .replace(/\s+\r?\n/g, '\r\n');
	  if(this.verbose)
	     this.out('Removing comments, empty lines and trailing whitespace, saved ' +
		($70 - this.buffer.length) + ' bytes.');
	  $70 = this.buffer.length;
	  }
	if(this.crunchLevel >= 2){
	  this.buffer = this.buffer.replace(this.oReWhiteSpaceEqv_1,  $19);
	  if(this.verbose)
	     this.out('Removing tabs and spaces, saved ' +
		($70 - this.buffer.length) + ' bytes.');
	  $70 = this.buffer.length;
	  this.buffer = this.buffer.replace(this.oReOperatorRightW_2, $1a);
	  if(this.verbose)
	     this.out('Removing spaces left to operators, saved ' +
		($70 - this.buffer.length) + ' bytes.');
	  $70 = this.buffer.length;
	  this.buffer = this.buffer.replace(this.oReOperatorLeftW_3,  $1b);
	  if(this.verbose)
	     this.out('Removing spaces right to operators, saved ' +
		($70 - this.buffer.length) + ' bytes.');
	  $70 = this.buffer.length;
	  }
	if(this.substitute || this.crunchLevel >= 4){
	  this.buffer = this.buffer.replace(this.oReBlessFunctions_4, $16);
	  this.buffer = this.buffer.replace(this.oReSubstVariables_5, $17);
	  this.buffer = this.buffer.replace(this.oReSubstMarkedProperty_6, $18);
	  if(this.verbose)
	     this.out('Substitution summary, saved ' +
		($70 - this.buffer.length) + ' bytes.');
	  $70 = this.buffer.length;
	  }
	if(this.crunchLevel >= 3){
	   this.buffer = this.buffer.replace(/\r?\n/g, '')
	    .replace(/}function/g, '};function')
	    .replace(this.oReCompoundHack_7, $1c);
	  if(this.verbose){
	    this.out('Removing newlines, saved ' +
		($70 - this.buffer.length) + ' bytes.');
	    this.out('' , 1);
	    }
	  }
	this.buffer = this.buffer.replace(new RegExp(this.$7c, 'g'), '\r\n');
	this.report.crunchedLength = this.buffer.length;
	this.report.stopAt = (new Date()).getTime();
	return this.buffer;
	}
function $1e($71, $72){
	var $73 = ($72 || '\r\n'),
	 $74 = String($73 + this.label + $73);
	if(!this.report.startAt){
	  $74 += 'Nothing to report, yet...';
	  return (!$71) ? this.out($74, 1) : $74;
	  }
	var $75 = Boolean(this.substitute || this.crunchLevel >= 4),
	 $76 = this.report.originalLength - this.report.crunchedLength;
	$74 += "-----------------------------------------------------------------------------" + $73;
	$74 += " Crunching script(s):\r\n\t * " + this.report.$4a.join("\r\n\t * ") + $73;
	$74 += "-----------------------------------------------------------------------------" + $73;
	$74 += " " + (this.outMode || "Put") + " to : " + (this.outFile || "[buffer]") + " (" +
	  (this.report.crunchedLength / 1024).toFixed(2) + " kB)" + $73;
	$74 += "-----------------------------------------------------------------------------" + $73;
	$74 += " Processtime     :\t" + ((this.report.stopAt - this.report.startAt) / 1000).toFixed(3) + " secs" + $73;
	$74 += " Crunch-level    :\t" + this.crunchLevel + $73;
	$74 += " Subst. engine   :\t" + ($75 ? 'On' : 'Off') + $73;
	if($75)
	  $74 += " Substitutions   :\t" + this.$7b + $73;
	$74 += " Original size   :\t" + (this.report.originalLength / 1024).toFixed(2) + " kB" + $73;
	$74 += " Crunched size   :\t" + (this.report.crunchedLength / 1024).toFixed(2) + " kB" + $73;
	$74 += " Saving ratio    :\t" + ($76 / 1024).toFixed(2) + " kB" + $73;
	$74 += "   -'' ''-   (%) :\t" + (($76 / this.report.originalLength) * 100).toFixed(2) + " %" + $73;
	$74 += "-----------------------------------------------------------------------------" + $73;
	if(!$71)
	  return this.out($74, 1);
	else return $74;
	}
	if(typeof(Soya) == 'object') Soya.registerBean('Soya.Saltstorm.ESC', false, 1);

/* </POD> */

//]]>
</script>
<script language="JScript">
//<![CDATA[
	/*
	Command flow control script for ESC.wsf
	Edited : 23:25 2001-06-14
	*/

	var oShell = WScript.CreateObject('WScript.Shell');

	if(!oShell)
	  WScript.Quit(64);

	// Do we have Jscript 5.5+ ?
	else if(oShell && parseFloat(ScriptEngineMajorVersion() + '.' + ScriptEngineMinorVersion()) < 5.5)
	  oShell.Popup(getResource('jscript'), 64, WScript.ScriptName, 16), WScript.Quit(4);
	
	// Is ESC executed under cscript ?
	// if not let user select switching to cscript automagically.
	else if(oShell && WScript.FullName.toLowerCase().indexOf('cscript') < 0){
	  if(oShell.Popup(getResource('wscript'), 64, WScript.ScriptName, 52) == 6)
	    oShell.Run('%comspec% /Q /K cscript //NoLogo ESC.wsf -help', 9);
	  WScript.Quit(3);
	  }

	// get the cmdline arguments formatted in a nice manner.
	var oArgs = Soya.WSH.Arguments.getArguments();

	// should we run in verbose-mode ?;
	var bVerbose = Boolean(!oArgs.s && !oArgs.silent && (oArgs.v || oArgs.verbose));

	// create an instance of the ESC object.
	var esc = new Soya_Saltstorm_ESC(oArgs.l || oArgs.level, bVerbose);

	var sOutput = String(oArgs.oa || oArgs.ow || '');

	if(oArgs.a || oArgs.about){
	  WScript.Echo(getResource('about'));
	  WScript.Quit(1);
	  }
	else if(oArgs.c || oArgs.copyright){
	  WScript.Echo('\n' + esc.label + getResource('copyright'));
	  WScript.Quit(1);
	  }
	else if(oArgs.e || oArgs.example){
	  WScript.Echo('\n' + esc.label + getResource('example'));
	  WScript.Quit(1);
	  }

	// if there are options missing, print out the help table and quit.
	else if((oArgs.h || oArgs.help) || !sOutput.length || !oArgs[0]){
	  WScript.Echo('\n' + esc.label + getResource('usage'));
	  WScript.Quit((oArgs.h || oArgs.help) ? 1 : 2);
	  }
	
	// Wake up the variable substitution engine if option set (-$);
	esc.substitute = Boolean(oArgs.$);

	// load input files;
	for(var i = 0; i < oArgs.length; i++)
	  esc.load(oArgs[i]);

	// crunch baby, crunch!;
	if(sOutput.toUpperCase() == 'STDOUT'){
	  esc.silent = true;
	  WScript.Echo(esc.crunch());
	  }
	else if(sOutput.length){
	  esc.crunch();
	  esc.save(sOutput, Boolean(oArgs.ow));
	  // write report to stdout if not silence'd.
	  if(!oArgs.s && !oArgs.silent)
	    esc.printReport();
	  }
	
	// Shutting down nicely..
	WScript.Quit(0);

//]]>
</script>
</job>
</package>
